import{d as x,L as p,M as g,G as L,H as k,y as D,I as N,J as V,b as _,c as A,e as I,w as a,f as l,h as n,u as r,E as y,K as v}from"./index-a4e2f83b.js";const b=x({name:"ReTreeLine",props:{node:{type:Object,required:!0},data:{type:Array,default:()=>{}},treeData:{type:Array,default:()=>[]},indent:{type:Number,default:16},showLabelLine:{type:Boolean,default:!0}},setup(f,h){const{slots:o}=h;return{getScopedSlot:t=>{if(!t)return null;const d=t.split("||");let e=null;for(let s=0;s<d.length;s++){const c=d[s];e=(o||{})[c]}return e},getSlotValue:(t,d,e=null)=>g(t)?t(d)||e:t||e}},render(){const f=this.getScopedSlot("default"),h=this.getScopedSlot("node-label"),o=this.getScopedSlot("after-node-label"),m=f?this.getSlotValue(f,{node:this.node,data:this.data}):[h?this.getSlotValue(h,{node:this.node,data:this.data}):p("span",{class:"element-tree-node-label"},this.node.label),this.showLabelLine?p("span",{class:"element-tree-node-label-line"}):null,this.getSlotValue(o,{node:this.node,data:this.data})],i=[];let t=this.node;for(;t;){let e=t.parent;if(t.level===1&&!t.parent){if(!this.treeData||!Array.isArray(this.treeData))throw Error("if you using el-tree-v2 (Virtualized Tree) of element-plus,element-tree-line required data.");e={children:Array.isArray(this.treeData)?this.treeData.map(s=>({...s,key:s.id})):[],level:0,key:"node-0",parent:null}}if(e){const s=(e.children||e.childNodes).findIndex(c=>(c.key||c.id)===(t.key||t.id));i.unshift(s===(e.children||e.childNodes).length-1)}t=e}const d=[];for(let e=0;e<this.node.level;e++)d.push(p("span",{class:{"element-tree-node-line-ver":!0,"last-node-line":i[e]&&this.node.level-1!==e,"last-node-isLeaf-line":i[e]&&this.node.level-1===e},style:{left:this.indent*e+"px"}}));return p("span",{class:"element-tree-node-label-wrapper"},[m].concat(d).concat([p("span",{class:"element-tree-node-line-hor",style:{width:(this.node.isLeaf?24:8)+"px",left:(this.node.level-1)*this.indent+"px"}})]))}}),T=n("div",{class:"card-header"},[n("span",{class:"font-medium"}," 扩展elemenet-plus的树形组件包括虚拟树组件，支持连接线 ")],-1),q=n("div",{class:"card-header"},[n("span",{class:"font-medium"}," 普通树结构 ")],-1),B={class:"max-h-[550px] overflow-y-auto"},C={class:"text-sm"},E=n("div",{class:"card-header"},[n("span",{class:"font-medium"}," 虚拟树结构 ")],-1),P={class:"max-h-[550px] overflow-y-auto"},H={class:"text-sm"},K=x({name:"LineTree"}),j=x({...K,setup(f){const h=L(k().wholeMenus,!0),o=D(()=>N(h)),m=V(o.value),i={value:"uniqueId",children:"children"};return(t,d)=>{const e=_("el-tree"),s=_("el-card"),c=_("el-col"),S=_("el-tree-v2"),w=_("el-row");return A(),I(s,{shadow:"never"},{header:a(()=>[T]),default:a(()=>[l(w,{gutter:24},{default:a(()=>[l(c,{xs:24,sm:24,md:12,lg:12,xl:12,class:"mb-[20px]"},{default:a(()=>[l(s,{shadow:"never"},{header:a(()=>[q]),default:a(()=>[n("div",B,[l(e,{data:r(o),props:i,"show-checkbox":"","default-expand-all":"","node-key":"uniqueId",indent:30},{default:a(({node:u})=>[l(r(b),{node:u,showLabelLine:!0},{"node-label":a(()=>[n("span",C,y(r(v)(u.data.meta.title)),1)]),_:2},1032,["node"])]),_:1},8,["data"])])]),_:1})]),_:1}),l(c,{xs:24,sm:24,md:12,lg:12,xl:12},{default:a(()=>[l(s,{shadow:"never"},{header:a(()=>[E]),default:a(()=>[n("div",P,[l(S,{data:r(o),props:i,"show-checkbox":"",height:550,"default-expanded-keys":r(m)},{default:a(({node:u})=>[l(r(b),{node:u,treeData:r(o),showLabelLine:!0,indent:30},{"node-label":a(()=>[n("span",H,y(r(v)(u.data.meta.title)),1)]),_:2},1032,["node","treeData"])]),_:1},8,["data","default-expanded-keys"])])]),_:1})]),_:1})]),_:1})]),_:1})}}});export{j as default};
